openapi: 3.0.3
info:
  title: Buchmanagement API
  version: "1.0.0"
  description: |
    Diese API ermöglicht die Verwaltung von Benutzern, deren Büchern und Buchrezensionen.
    Bücher werden anhand ihrer ISBN hinzugefügt, und die Buchdetails werden automatisch
    über die OpenLibrary API abgerufen.
servers:
  - url: http://localhost:8080
    description: Basis-URL ohne Pfad-Prefix
paths:
  /users:
    get:
      summary: Liste aller Benutzer
      description: Gibt eine Liste aller registrierten Benutzer zurück.
      responses:
        "200":
          description: Erfolgreiche Anfrage, Liste der Benutzer.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "500":
          description: Interner Serverfehler – z. B. bei unerwarteten Laufzeitfehlern.
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
    post:
      summary: Erstellt einen neuen Benutzer
      description: Erstellt einen Benutzer, indem Name und Email übergeben werden.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
              required:
                - name
                - email
      responses:
        "201":
          description: Benutzer erfolgreich erstellt.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Ungültige Eingabedaten (z. B. leere Felder, ungültiges Format).
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
        "409":
          description: Ein Benutzer mit dieser E-Mail existiert bereits.
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
  /users/{userId}:
    get:
      summary: Benutzerdetails abrufen
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: ID des Benutzers
      responses:
        "200":
          description: Erfolgreiche Anfrage, Benutzerdetails.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: Benutzer nicht gefunden.
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
    put:
      summary: Aktualisiert ein Benutzerprofil
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: ID des Benutzers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
      responses:
        "200":
          description: Benutzerprofil erfolgreich aktualisiert.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Ungültige Eingabedaten (z. B. leeres Feld oder ungültige E-Mail).
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
        "404":
          description: Benutzer mit der angegebenen ID wurde nicht gefunden.
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
    delete:
      summary: Löscht einen Benutzer
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: ID des Benutzers
      responses:
        "204":
          description: Benutzer erfolgreich gelöscht.
        "404":
          description: Benutzer wurde nicht gefunden.
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
  /users/{userId}/books:
    get:
      summary: Liste der Bücher eines Benutzers abrufen
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
        - in: query
          name: rating
          schema:
            type: integer
          required: false
      responses:
        "200":
          description: Erfolgreiche Anfrage, Bücherliste.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Book"
    post:
      summary: Fügt ein neues Buch hinzu
      description: >
        Fügt ein Buch anhand der ISBN zum Benutzerprofil hinzu.
        Die Buchdetails (inkl. Titel, Beschreibung, Verlag usw.) werden über die OpenLibrary API abgerufen.
        Das zugehörige Coverbild in hoher Auflösung (Large) wird über die OpenLibrary Covers API referenziert
        und unter `coverUrl` gespeichert.
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                isbn:
                  type: string
              required:
                - isbn
      responses:
        "201":
          description: Buch erfolgreich hinzugefügt.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"
        "400":
          description: Ungültige ISBN oder fehlende Felder.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
        "404":
          description: Benutzer nicht gefunden.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
        "500":
          description: Fehler beim Abrufen der Buchdaten von OpenLibrary.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
  /users/{userId}/books/search:
    get:
      summary: Suche und Filtere Bücher
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
        - in: query
          name: title
          schema:
            type: string
        - in: query
          name: author
          schema:
            type: string
        - in: query
          name: year
          schema:
            type: integer
        - in: query
          name: rating
          schema:
            type: integer
      responses:
        "200":
          description: Gefilterte Bücherliste.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Book"
  /users/{userId}/books/{isbn}:
    get:
      summary: Buchdetails abrufen
      description: >
        Liefert sämtliche gespeicherten Informationen eines bestimmten Buches für den angegebenen Benutzer.
        Dazu gehören Titel, Autoren, Verlag, Veröffentlichungsdatum, Beschreibung, Bewertung und Cover-URL.
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: ID des Benutzers
        - in: path
          name: isbn
          schema:
            type: string
          required: true
          description: ISBN des abzurufenden Buches
      responses:
        "200":
          description: Buchdetails.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"
        "404":
          description: Buch oder Benutzer wurde nicht gefunden.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
    put:
      summary: Bewertung eines Buches aktualisieren
      description: Aktualisiert nur den Bewertungswert eines Buches (zwischen 1 und 5).
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
        - in: path
          name: isbn
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rating:
                  type: integer
                  minimum: 1
                  maximum: 5
              required:
                - rating
      responses:
        "200":
          description: Bewertung erfolgreich aktualisiert.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"
        "400":
          description: Ungültige Bewertung oder fehlerhafte Felder.
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
        "404":
          description: Benutzer oder Buch wurde nicht gefunden.
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
    delete:
      summary: Buch löschen
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
        - in: path
          name: isbn
          schema:
            type: string
          required: true
      responses:
        "204":
          description: Buch erfolgreich gelöscht.
  /users/{userId}/books/{isbn}/reviews:
    get:
      summary: Alle Rezensionen eines Buches
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
        - in: path
          name: isbn
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Liste der Rezensionen.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Review"
    post:
      summary: Rezension hinzufügen
      description: Erstellt Bewertung und Text für ein Buch.
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
        - in: path
          name: isbn
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rating:
                  type: integer
                reviewText:
                  type: string
              required:
                - rating
                - reviewText
      responses:
        "201":
          description: Rezension erstellt.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Review"
  /users/{userId}/books/{isbn}/reviews/{reviewId}:
    put:
      summary: Rezension aktualisieren
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
        - in: path
          name: isbn
          schema:
            type: string
          required: true
        - in: path
          name: reviewId
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rating:
                  type: integer
                reviewText:
                  type: string
      responses:
        "200":
          description: Rezension aktualisiert.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Review"
    delete:
      summary: Rezension löschen
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
        - in: path
          name: isbn
          schema:
            type: string
          required: true
        - in: path
          name: reviewId
          schema:
            type: string
          required: true
      responses:
        "204":
          description: Rezension gelöscht.
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string
        books:
          type: array
          items:
            $ref: "#/components/schemas/Book"
    ProblemDetail:
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        status:
          type: integer
        detail:
          type: string
    Book:
      type: object
      properties:
        isbn:
          type: string
        title:
          type: string
        authors:
          type: array
          items:
            type: string
        publisher:
          type: string
        publishedDate:
          type: string
          format: date
        coverUrl:
          type: string
          description: URL zum großen Coverbild
        description:
          type: string
        rating:
          type: integer
    Review:
      type: object
      properties:
        id:
          type: string
          format: uuid
        rating:
          type: integer
        reviewText:
          type: string
      required:
        - id
        - rating
        - reviewText