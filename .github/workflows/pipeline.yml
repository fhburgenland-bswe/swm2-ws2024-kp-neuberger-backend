name: Backend CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  conform:
    name: Validate Commit Messages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: siderolabs/conform@v0.1.0-alpha.27
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  checkstyle:
    name: Checkstyle Lint
    runs-on: ubuntu-latest
    needs: [conform]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '21'
      - name: Run Checkstyle
        run: ./gradlew checkstyleMain checkstyleTest
      - name: Upload Checkstyle Report
        uses: actions/upload-artifact@v4
        with:
          name: checkstyle-report
          path: build/reports/checkstyle/

  pmd:
    name: PMD Static Analysis
    runs-on: ubuntu-latest
    needs: [conform]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '21'
      - name: Run PMD
        run: ./gradlew pmdMain pmdTest
      - name: Upload PMD Report
        uses: actions/upload-artifact@v4
        with:
          name: pmd-report
          path: build/reports/pmd/

  spotbugs:
    name: SpotBugs Analysis
    runs-on: ubuntu-latest
    needs: [conform]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '21'
      - name: Run SpotBugs
        run: ./gradlew spotbugsMain spotbugsTest
      - name: Upload SpotBugs Report
        uses: actions/upload-artifact@v4
        with:
          name: spotbugs-report
          path: build/reports/spotbugs/

  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-latest
    needs: [conform]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '21'
      - name: Run OWASP Dependency Check
        run: ./gradlew dependencyCheckAnalyze
      - name: Upload OWASP Report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: build/reports/dependency-check-report.html

  tests:
    name: Unit Tests and Coverage
    runs-on: ubuntu-latest
    needs: [conform]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '21'
      - name: Run Tests
        run: ./gradlew test
      - name: Upload JaCoCo HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: build/reports/jacoco/test/html/

  build:
    name: Build Backend
    runs-on: ubuntu-latest
    needs: [checkstyle, pmd, spotbugs, dependency-check, tests]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '21'
      - name: Build with Gradle
        run: ./gradlew build
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-jar
          path: build/libs/*.jar

  hadolint:
    name: Lint Dockerfile
    runs-on: ubuntu-latest
    needs: [conform]
    steps:
      - uses: actions/checkout@v4
      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile

  docker:
    name: Docker Build and Push
    runs-on: ubuntu-latest
    needs: [build, hadolint]
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v4
        with:
          name: backend-jar
          path: build/libs/
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/bookmanager-backend:latest